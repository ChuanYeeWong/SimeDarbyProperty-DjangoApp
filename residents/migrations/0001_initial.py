# Generated by Django 2.2.4 on 2019-08-24 10:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('thumbnail', models.ImageField(help_text='Add thumbnail.', upload_to='Area/')),
            ],
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('code', models.CharField(max_length=50)),
                ('postal_code', models.IntegerField()),
                ('city', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('no_units', models.IntegerField(verbose_name='# of units')),
            ],
            options={
                'verbose_name_plural': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Lot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'House No.',
                'verbose_name_plural': 'House No.',
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Street',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Area')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentLotThroughModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Lot')),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Resident')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='resident',
            name='lot',
            field=models.ManyToManyField(through='residents.ResidentLotThroughModel', to='residents.Lot'),
        ),
        migrations.AddField(
            model_name='resident',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approve'), ('R', 'Reject')], default='P', max_length=1)),
                ('slip', models.ImageField(upload_to='images/', verbose_name='Certificate of Ownership')),
                ('confirm', models.BooleanField(default=False, verbose_name='I confirm that the information given in this form is true, complete and accurate.')),
                ('tou', models.BooleanField(default=False, verbose_name="I have read and agree to the <a href='#'>Privacy Policy</a>")),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Area')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Community')),
                ('lot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Lot')),
                ('street', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Street')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('township_community_officer_status', models.BooleanField(default=False, help_text='Designates whether the user is a township community officer.')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Community')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='lot',
            name='street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Street'),
        ),
        migrations.AddField(
            model_name='area',
            name='community',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='residents.Community'),
        ),
    ]
